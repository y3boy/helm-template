nameOverride: ""
fullnameOverride: ""

imagePullSecrets: []

replicaCount: 1

strategy: {}

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

ports:
  - name: http
    containerPort: 80
    protocol: TCP

restartPolicy: OnFailure

# Specifies list of initContainers
initContainers:
  - name: db
    securityContext: {}
    image:
      repository:
      pullPolicy: IfNotPresent
      tag:
    command: []
    args: []

sidecars:
  # - name:
  #   securityContext: {}
  #   image:
  #     repository:
  #     pullPolicy: IfNotPresent
  #     tag:
  #   command:
  #   args:

env: []
  # - name: ENV_VAR_NAME
  #   value: "ENV_VAR_VALUE"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  type: ClusterIP

  # Specify ports mapping for service.
  # If not set ports mapping would be same as `image.ports[]`.
  # ports:
  #   - name: http-server
  #     port: 8080
  #     # Could be container port name or container port number
  #     # `targetPort: http` or `targetPort: 8080`
  #     targetPort: http
  #     protocol: TCP
    

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
